services:
  fastapi-app:
    restart: always
    env_file:
      - .env
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      database:
        condition: service_healthy

  database:
      image: postgres:alpine
      restart: always
      env_file:
        - .env
      healthcheck:
        test:
          [
            "CMD-SHELL",
            "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'",
          ]
        interval: 10s
        timeout: 5s
        retries: 5
      volumes:
        - app-db-volume:/var/lib/postgresql/data
      networks:
        - app-network

  redis:
    image: redis:7.2
    restart: always
    env_file:
      - .env
    volumes:
      - app-redis-volume:/data
    command: redis-server --save 60 1 --requirepass ${REDIS_PASSWORD}
    expose:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile-worker
    env_file:
      - .env
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379/0  # Update this based on your Redis configuration
    # command: celery -A celery_instance.celery worker --loglevel=info
    networks:
      - app-network

  bot:
    restart: always
    build:
      context: .
      dockerfile: Dockerfile-bot
    env_file:
      - .env
    networks:
      - app-network

networks:
  app-network:

volumes:
  app-db-volume: 
  app-redis-volume:
